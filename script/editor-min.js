//For uncompressed source code, visit https://github.com/tonY1883/jsonedit
class t{DELIMITER=String.fromCharCode(7);#t;#e;#i="";#n;#a;#s=!0;#l=document.querySelector("#browser");#r=document.querySelector("#tree");#o=document.querySelector("#editor-content");#c=document.querySelector("#save-file-button");#d=document.querySelector("#load-file-button");#u=document.querySelector("#save-string-button");#y=document.querySelector("#load-string-button");#h=document.querySelector("#new-json-button");#p=document.querySelector("#copy-button");#b=document.querySelector("#paste-button");#v=document.querySelector("#clear-button");#m=document.querySelector("#setting-button");#g=document.querySelector("#modal-string");#f=document.querySelector("#modal-string-out");#S=document.querySelector("#modal-new-json-root");#w=document.querySelector("#modal-setting");#L=document.querySelector("#searchbox");saveFile(){const t=JSON.stringify(this.#t),e=document.createElement("a");e.download=this.#e,e.href=window.URL.createObjectURL(new Blob([t],{type:"application/json"})),document.body.appendChild(e),window.requestAnimationFrame((()=>{e.click(),document.body.removeChild(e)}))}loadData(t){try{this.#t=JSON.parse(t)}catch(t){return void alert("Your JSON contains syntax errors!\nFail to parse JSON: "+t.message)}document.querySelector("#save-json-button").style.visibility="visible",this.#l.style.visibility="visible",void 0!==this.#e?document.title="JSONEdit: "+this.#e:this.#e="JSON.json",this.#r.innerHTML="",this.#o.innerHTML="",this.assembleTreeDisplay()}loadFile(t){let e=document.createElement("input");e.type="file",t&&(e.accept=t),e.addEventListener("change",(()=>{if(e.files){let i=e.files[0];this.#e=i.name;var t=new FileReader;t.onload=t=>{var e=t.target?.result;this.loadData(e)},t.readAsText(i)}})),e.click()}assembleTreeDisplay(){let t=this.getTreeNodeHTML(this.#t,this.#e);t&&this.#r.appendChild(t),document.querySelectorAll(".caret").forEach((t=>{t.addEventListener("click",(t=>{const e=t.target;let i=e.parentElement;i.querySelector(".tree-node-list")?.classList.toggle("active-tree"),"+"===e.innerHTML?e.innerHTML="-":"-"===e.innerHTML&&(e.innerHTML="+")}))})),document.querySelectorAll(".tree-label").forEach((t=>{t.addEventListener("click",(t=>{t.stopPropagation(),document.querySelectorAll(".tree-label-selected").forEach((t=>t.classList.toggle("tree-label-selected"))),t.target.classList.toggle("tree-label-selected"),this.loadDatum(t.target.dataset.name)}))}))}refreshTree(){this.#t&&this.loadData(JSON.stringify(this.#t))}loadDatum(t){let e,i,n=t.split(this.DELIMITER);this.#o.innerHTML="",e=1,i=this.#t;for(let e=1;e<n.length;e++)try{i=i[n[e]]}catch(e){return void alert(`Unable to load value ${t}:\n`+e.message)}if(!this.isObject(i)&&!Array.isArray(i))return n.pop(),this.loadDatum(n.join(this.DELIMITER));if(this.#n=i,Array.isArray(this.#n))this.#n.forEach(((t,e)=>{this.isObject(t)?this.#o.insertAdjacentHTML("beforeend",`\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="table-row">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input class="key-input" readonly value=${e}> : <textarea class="table-cell value-input" readonly value=${JSON.stringify(t)} id="id-input">${JSON.stringify(t)}</textarea>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button class='delete-row'><i class="material-icons" style="vertical-align: middle;">remove_circle</i>Delete</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>`):this.#o.insertAdjacentHTML("beforeend",`\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="table-row">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input class="key-input" readonly value=${e}> : <textarea class="table-cell value-input" value=${t} id="id-input">${t}</textarea>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button class='delete-row'><i class="material-icons" style="vertical-align: middle;">remove_circle</i>Delete</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>`)}));else for(let[t,e]of Object.entries(this.#n))this.isObject(e)?this.#o.insertAdjacentHTML("beforeend",`\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="table-row">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input class="key-input" value=${t}> : <textarea class="table-cell value-input" readonly value=${JSON.stringify(e)} id="id-input">${JSON.stringify(e)}</textarea>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button class='delete-row'><i class="material-icons" style="vertical-align: middle;">remove_circle</i>Delete</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>`):this.#o.insertAdjacentHTML("beforeend",`\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class="table-row">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input class="key-input" value=${t}> : <textarea class="table-cell value-input" value=${e} id="id-input">${e}</textarea>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button class='delete-row'><i class="material-icons" style="vertical-align: middle;">remove_circle</i>Delete</button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>`);document.querySelectorAll(".new").length||(this.#o.insertAdjacentHTML("beforeend","\n\t\t\t\t<div class='table-row' id='new-row'>\n\t\t\t\t\t<button class='new'>\n\t\t\t\t\t\t<i class='material-icons' style='vertical-align: middle;'>add_circle</i>\n\t\t\t\t\t\tNew...\n\t\t\t\t\t</button>\n\t\t\t\t\t<ul class='menu' id='new-option'>\n\t\t\t\t\t\t<li class='menu-items' id='new-value-button'><a>Value</a></li>\n\t\t\t\t\t\t<li class='menu-items' id='new-array-button'><a>Array</a></li>\n\t\t\t\t\t\t<li class='menu-items' id='new-object-button'><a>Object</a></li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t"),document.querySelector("#new-value-button").addEventListener("click",(()=>{let t;document.querySelector("#new-option").style.display="none",t=Array.isArray(this.#n)?"\n\t\t\t\t\t\t<div class='table-row'><input class='key-input' readonly value=''> :\n\t\t\t\t\t\t\t<textarea class='table-cell value-input' id='id-input'> </textarea>\n\t\t\t\t\t\t\t<button class='delete-row'>\n\t\t\t\t\t\t\t\t<i class='material-icons' style='vertical-align: middle;'>remove_circle</i>Delete\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t":"\n\t\t\t\t\t\t<div class='table-row'><input class='key-input' value=''> :\n\t\t\t\t\t\t\t<textarea class='table-cell value-input' id='id-input'> </textarea>\n\t\t\t\t\t\t\t<button class='delete-row'>\n\t\t\t\t\t\t\t\t<i class='material-icons' style='vertical-align: middle;'>remove_circle</i>Delete\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t",document.querySelector("#new-row").insertAdjacentHTML("beforebegin",t),this.reloadIndices()})),document.querySelector("#new-array-button").addEventListener("click",(()=>{let t;document.querySelector("#new-option").style.display="none",t=Array.isArray(this.#n)?"\n\t\t\t\t\t\t<div class='table-row'><input class='key-input' readonly value=''> :\n\t\t\t\t\t\t\t<textarea class='table-cell value-input' readonly id='id-input'>[]</textarea>\n\t\t\t\t\t\t\t<button class='delete-row'>\n\t\t\t\t\t\t\t\t<i class='material-icons' style='vertical-align: middle;'>remove_circle</i>Delete\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t":"\n\t\t\t\t\t\t<div class='table-row'><input class='key-input' value=''> :\n\t\t\t\t\t\t\t<textarea class='table-cell value-input' readonly id='id-input'>[]</textarea>\n\t\t\t\t\t\t\t<button class='delete-row'>\n\t\t\t\t\t\t\t\t<i class='material-icons' style='vertical-align: middle;'>remove_circle</i>Delete\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t",document.querySelector("#new-row").insertAdjacentHTML("beforebegin",t),this.reloadIndices()})),document.querySelector("#new-object-button").addEventListener("click",(()=>{let t;document.querySelector("#new-option").style.display="none",t=Array.isArray(this.#n)?"\n\t\t\t\t\t\t<div class='table-row'><input class='key-input' readonly value=''> :\n\t\t\t\t\t\t\t<textarea class='table-cell value-input' readonly id='id-input'>{}</textarea>\n\t\t\t\t\t\t\t<button class='delete-row'>\n\t\t\t\t\t\t\t\t<i class='material-icons' style='vertical-align: middle;'>remove_circle</i>Delete\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t":"\n\t\t\t\t\t\t<div class='table-row'><input class='key-input' value=''> :\n\t\t\t\t\t\t\t<textarea class='table-cell value-input' readonly id='id-input'>{}</textarea>\n\t\t\t\t\t\t\t<button class='delete-row'>\n\t\t\t\t\t\t\t\t<i class='material-icons' style='vertical-align: middle;'>remove_circle</i>Delete\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t",document.querySelector("#new-row").insertAdjacentHTML("beforebegin",t),this.reloadIndices()})),document.querySelectorAll(".new").forEach((t=>t.addEventListener("click",(()=>{document.querySelector("#new-option").style.display="block"}))))),document.querySelector("#save-btn")||(this.#o.insertAdjacentHTML("beforeend",'<button id="save-btn" class="save-btn raised-button">Save</button>'),document.querySelector("#save-btn").addEventListener("click",(()=>{this.saveDatum()}))),document.querySelectorAll(".key-input[readonly]").forEach((t=>t.addEventListener("keydown",(()=>alert("Array indices cannot be modified!"))))),document.querySelectorAll(".value-input[readonly]").forEach((t=>t.addEventListener("keydown",(()=>alert("Objects and arrays must be edited in their own node!"))))),document.querySelectorAll(".delete-row").forEach((t=>t.addEventListener("click",(t=>{t.target.parentNode.remove(),this.reloadIndices()})))),document.querySelector("#edit-button").style.visibility="visible"}clearNode(t){if(Array.isArray(t))t.forEach(((e,i)=>{this.isObject(e)||Array.isArray(e)?this.clearNode(t[i]):this.isNumber(t[i])?t[i]=0:!0===t[i]||!1===t[i]?t[i]=!1:t[i]=""}));else if(this.isObject(t)){let e=Object.entries(t);for(const[i,n]of e)this.isObject(n)||Array.isArray(n)?this.clearNode(t[i]):this.isNumber(t[i])?t[i]=0:!0===t[i]||!1===t[i]?t[i]=!1:t[i]=""}}saveDatum(){const t=JSON.parse(JSON.stringify(this.#n)),e=Object.keys(t),i=document.querySelectorAll(".key-input"),n=[];let a=document.querySelectorAll(".value-input");i.forEach(((t,i)=>{if(n.push(t.value),a[i].readOnly)e.includes(t.value)||(Array.isArray(this.#n)?this.#n[Number(t.value)]=JSON.parse(a[i].value):this.#n[t.value]=JSON.parse(a[i].value));else{const e=Array.isArray(this.#n)?Number(t.value):t.value;let n=a[i].value;this.#s&&(this.isNumber(n)?n=Number(n):"true"!==n&&"false"!==n||(n="true"===n)),this.#n[e]=n}})),e.forEach((t=>{n.includes(t)||delete this.#n[t]})),this.refreshTree(),alert("Content saved.")}reloadIndices(){if(Array.isArray(this.#n)){document.querySelectorAll(".key-input").forEach(((t,e)=>t.value=e.toString()))}}reload(){this.#t&&this.loadData(JSON.stringify(this.#t))}getTreeNodeHTML(t,e){let i=document.createElement("li"),n=new Array;if(Array.isArray(t)){let a=0;t.forEach(((t,i)=>{let s=this.getTreeNodeHTML(t,e+this.DELIMITER+i);void 0!==s&&(n.push(s),a++)})),a>0?i.insertAdjacentHTML("beforeend",`<span class='caret'>${this.#i.length>0?"-":"+"}</span><span class='tree-label' data-name='${e}'><i class='type-icon-array type-icon'> </i>${e.substr(e.lastIndexOf(this.DELIMITER)+1)}</span>`):i.insertAdjacentHTML("beforeend",`<span class='caret'>&nbsp;</span><span class='tree-label' data-name='${e}'><i class='type-icon-array type-icon'> </i>${e.substr(e.lastIndexOf(this.DELIMITER)+1)}</span>`)}else if(this.isObject(t)){let a=Object.entries(t),s=0;for(const[t,i]of a){let a=this.getTreeNodeHTML(i,e+this.DELIMITER+t);void 0!==a&&(n.push(a),s++)}s>0?i.insertAdjacentHTML("beforeend",`<span class='caret'>${this.#i.length>0?"-":"+"}</span><span class='tree-label' data-name='${e}'><i class='type-icon-object type-icon'> </i>${e.substr(e.lastIndexOf(this.DELIMITER)+1)}</span>`):i.insertAdjacentHTML("beforeend",`<span class='caret'>&nbsp;</span><span class='tree-label' data-name='${e}'><i class='type-icon-object type-icon'> </i>${e.substr(e.lastIndexOf(this.DELIMITER)+1)}</span>`)}else this.isNumber(t)?i.insertAdjacentHTML("beforeend",`<span class='caret'>&nbsp;</span><span class='tree-label' data-name='${e}'><i class='type-icon-number type-icon'> </i>${e.substr(e.lastIndexOf(this.DELIMITER)+1)}</span>`):!0===t||!1===t?i.insertAdjacentHTML("beforeend",`<span class='caret'>&nbsp;</span><span class='tree-label' data-name='${e}'><i class='type-icon-bool type-icon'> </i>${e.substr(e.lastIndexOf(this.DELIMITER)+1)}</span>`):i.insertAdjacentHTML("beforeend",`<span class='caret'>&nbsp;</span><span class='tree-label' data-name='${e}'><i class='type-icon-string type-icon'> </i>${e.substr(e.lastIndexOf(this.DELIMITER)+1)}</span>`);if(n.length>0||0===this.#i.length||e.toLowerCase().includes(this.#i.toLowerCase())){let t=document.createElement("ul");t.classList.add("tree-node-list"),this.#i.length>0&&e.split(this.DELIMITER).pop().toLowerCase().includes(this.#i.toLowerCase())&&t.classList.add("active-tree");for(let e=0;e<n.length;e++)t.appendChild(n[e]);return i.appendChild(t),i}}copyDatum(){this.#a=JSON.stringify(this.#n),alert("Current element copied.")}pasteDatum(){if(this.#a){let t;t=Array.isArray(this.#n)?`\n\t\t\t<div class='table-row'>\n\t\t\t\t<input class='key-input' readonly value=''> : \n\t\t\t\t<textarea class='table-cell value-input' readonly id='id-input'>\n\t\t\t\t\t${this.#a}\n\t\t\t\t</textarea>\n\t\t\t\t<button class='delete-row'><i class='material-icons'style='vertical-align: middle;'>remove_circle</i>Delete</button>\n\t\t\t</div>`:`\n\t\t\t<div class='table-row'>\n\t\t\t\t<input class='key-input'> : \n\t\t\t\t<textarea class='table-cell value-input' readonly id='id-input'>\n\t\t\t\t\t${this.#a}\n\t\t\t\t</textarea>\n\t\t\t\t<button class='delete-row'><i class='material-icons'style='vertical-align: middle;'>remove_circle</i>Delete</button>\n\t\t\t</div>`,document.querySelector("#new-row").insertAdjacentHTML("beforebegin",t),this.reloadIndices()}}isObject(t){return t===Object(t)}isNumber(t){return"number"==typeof t}constructor(){this.#c.addEventListener("click",(()=>{this.saveFile()})),this.#d.addEventListener("click",(()=>{this.loadFile(".json")})),this.#L.addEventListener("keyup",(t=>{this.#i=t.target.value,this.reload()})),this.#h.addEventListener("click",(()=>{(void 0===this.#t||confirm("Creating a new JSON will discard the JSON you are currently editing.\nAre you sure you want to continue?"))&&this.#S.showModal()})),this.setPopupCloseTrigger(this.#S),document.querySelector("#new-json").addEventListener("click",(()=>{!0===document.querySelector("#option-ary").checked?(this.loadData("[]"),this.#S.close()):!0===document.querySelector("#option-obj").checked&&(this.loadData("{}"),this.#S.close())})),this.#m.addEventListener("click",(()=>{this.#w.showModal()})),this.setPopupCloseTrigger(this.#w),document.querySelector("#save-setting").addEventListener("click",(()=>{this.#s=document.querySelector("#option-type-convert").checked,this.#w.close()})),this.#u.addEventListener("click",(()=>{this.#f.showModal();const t=document.querySelector("#string-output");t.value=JSON.stringify(this.#t),t.focus(),t.select()})),this.setPopupCloseTrigger(this.#f),document.querySelector("#copy-string").addEventListener("click",(()=>{navigator.clipboard.writeText(JSON.stringify(this.#t)),alert("Output JSON copied to your clipboard.")})),this.#y.addEventListener("click",(()=>{this.#g.showModal()})),document.querySelector("#load-string").addEventListener("click",(()=>{this.loadData(document.querySelector("#string-input").value),this.#g.close()})),this.setPopupCloseTrigger(this.#g),this.#p.addEventListener("click",(()=>{this.copyDatum()})),this.#b.addEventListener("click",(()=>{this.pasteDatum()})),this.#v.addEventListener("click",(()=>{confirm("Are you sure you want to clear all JSON values?\nAll values in the current editing JSON will be removed.")&&(this.clearNode(this.#n),this.refreshTree())})),this.#L.addEventListener("keyup",(t=>{this.#i=t.target.value,this.refreshTree()}))}setPopupCloseTrigger(t){t.addEventListener("click",(e=>{const i=t.getBoundingClientRect();i.top<=e.clientY&&e.clientY<=i.top+i.height&&i.left<=e.clientX&&e.clientX<=i.left+i.width||t.close()}))}}window.addEventListener("load",(()=>{new t}));